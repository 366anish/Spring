description = "Spring Web"

dependencyManagement {
	imports {
		mavenBom "io.projectreactor:reactor-bom:${reactorVersion}"
		mavenBom "io.netty:netty-bom:${nettyVersion}"
		mavenBom "org.eclipse.jetty:jetty-bom:${jettyVersion}"
	}
}

dependencies {
	compile(project(":spring-beans"))
	compile(project(":spring-core"))
	optional(project(":spring-aop"))
	optional(project(":spring-context"))
	optional(project(":spring-oxm"))
	optional("javax.servlet:javax.servlet-api:${servletApi3Version}")
	optional("javax.servlet.jsp:javax.servlet.jsp-api:${jspApiVersion}")
	optional("javax.el:javax.el-api:${elApiVersion}")
	optional("javax.faces:javax.faces-api:2.2")
	optional("javax.json.bind:javax.json.bind-api:1.0")
	optional("javax.mail:javax.mail-api:${mailApiVersion}")
	optional("javax.validation:validation-api:${validationApiVersion}")
	optional("javax.xml.bind:jaxb-api:${jaxbApiVersion}")
	optional("javax.xml.ws:jaxws-api:${jaxwsApiVersion}")
	optional("org.glassfish.main:javax.jws:4.0-b33")
	optional("io.reactivex:rxjava:${rxjavaVersion}")
	optional("io.reactivex:rxjava-reactive-streams:${rxjavaAdapterVersion}")
	optional("io.reactivex.rxjava2:rxjava:${rxjava2Version}")
	optional("io.netty:netty-all")
	optional("io.projectreactor.netty:reactor-netty")
	optional("io.undertow:undertow-core:${undertowVersion}")
	optional("org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}")
	optional("org.eclipse.jetty:jetty-server") {
		exclude group: "javax.servlet", module: "javax.servlet-api"
	}
	optional("org.eclipse.jetty:jetty-servlet") {
		exclude group: "javax.servlet", module: "javax.servlet-api"
	}
	optional("org.eclipse.jetty:jetty-reactive-httpclient:1.0.2")
	optional("com.squareup.okhttp3:okhttp:3.12.1")
	optional("org.apache.httpcomponents:httpclient:${httpclientVersion}") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	optional("org.apache.httpcomponents:httpasyncclient:4.1.4") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	optional("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
	optional("org.synchronoss.cloud:nio-multipart-parser:1.1.0")
	optional("com.fasterxml.woodstox:woodstox-core:${woodstoxCoreVersion}") {  // woodstox before aalto
		exclude group: "stax", module: "stax-api"
	}
	optional("com.fasterxml:aalto-xml:${aaltoXmlVersion}")
	optional("com.fasterxml.jackson.core:jackson-databind:${jackson2Version}")
	optional("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jackson2Version}")
	optional("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jackson2Version}")
	optional("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jackson2Version}")
	optional("com.google.code.gson:gson:2.8.5")
	optional("com.google.protobuf:protobuf-java-util:${protobufUtilVersion}")
	optional("com.googlecode.protobuf-java-format:protobuf-java-format:1.4")
	optional("com.rometools:rome:${romeVersion}")
	optional("com.caucho:hessian:4.0.51")
	optional("org.codehaus.groovy:groovy:${groovyVersion}")
	optional("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	optional("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	testCompile("io.projectreactor:reactor-test")
	testCompile("org.apache.taglibs:taglibs-standard-jstlel:1.2.5") {
		exclude group: "org.apache.taglibs", module: "taglibs-standard-spec"
	}
	testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jackson2Version}")
	testCompile("com.fasterxml.jackson.datatype:jackson-datatype-joda:${jackson2Version}")
	testCompile("com.fasterxml.jackson.module:jackson-module-kotlin:${jackson2Version}")
	testCompile("org.apache.tomcat:tomcat-util:${tomcatVersion}")
	testCompile("org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}")
	testCompile("org.eclipse.jetty:jetty-server")
	testCompile("org.eclipse.jetty:jetty-servlet")
	testCompile("com.squareup.okhttp3:mockwebserver:${mockwebserverVersion}")
	testCompile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	testCompile("org.skyscreamer:jsonassert:${jsonassertVersion}")
	testCompile("org.xmlunit:xmlunit-matchers:${xmlunitMatchersVersion}")
	testRuntime("com.sun.mail:javax.mail:${mailVersion}")
	testRuntime("com.sun.xml.bind:jaxb-core:${jaxbCoreVersion}")
	testRuntime("com.sun.xml.bind:jaxb-impl:${jaxbimplVersion}")
	testRuntime("javax.json:javax.json-api:1.1.4")
	testRuntime("org.apache.johnzon:johnzon-jsonb:1.1.11")
}
